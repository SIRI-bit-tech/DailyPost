# Generated by Django 5.1.7 on 2025-04-02 09:03

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-separated keywords for SEO', max_length=255)),
                ('meta_description', models.TextField(blank=True, help_text='Brief description for SEO')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=100)),
                ('confirmed', models.BooleanField(default=False)),
                ('confirmation_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('subscribed_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='authors/')),
                ('website', models.URLField(blank=True)),
                ('twitter', models.CharField(blank=True, max_length=255)),
                ('facebook', models.CharField(blank=True, max_length=255)),
                ('linkedin', models.CharField(blank=True, max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique_for_date='published_date')),
                ('subtitle', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField()),
                ('summary', models.TextField(blank=True, help_text='Brief summary of the article for SEO and previews')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='articles/featured/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('meta_title', models.CharField(blank=True, help_text='Page title for SEO (max 70 chars)', max_length=70)),
                ('meta_description', models.CharField(blank=True, help_text='Page description for SEO (max 160 chars)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-separated keywords for SEO', max_length=255)),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title for social sharing', max_length=70)),
                ('og_description', models.CharField(blank=True, help_text='Open Graph description for social sharing', max_length=200)),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter title for sharing', max_length=70)),
                ('twitter_description', models.CharField(blank=True, help_text='Twitter description for sharing', max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='news.author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='news.category')),
                ('tags', models.ManyToManyField(blank=True, related_name='articles', to='news.tag')),
            ],
            options={
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='news.article')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['-published_date'], name='news_articl_publish_2bbbd4_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['slug'], name='news_articl_slug_869c04_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['status'], name='news_articl_status_a95c4c_idx'),
        ),
    ]
